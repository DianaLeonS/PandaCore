#!/usr/bin/env python

from PandaCore.Tools.Misc import PInfo, PError, tTIMES
from sys import argv, exit
import argparse

parser = argparse.ArgumentParser(description='cutflow')
parser.add_argument('--treename',help='input TTree name',type=str,default='events')
parser.add_argument('--cutlist',help='file containing list of cuts',type=str)
parser.add_argument('--weight',help='weight expression',type=str,default=None)
parser.add_argument('infile',metavar='input',type=str,help='input file to process')
args = parser.parse_args()

argv = []

import root_numpy as rnp
import numpy as np

class Cutflow(object):
    def __init__(self):
        self.cuts = ['1==1']
        self.nicknames = {'1==1':'Full'}
        self.weight = None
    def register(self,cut,nickname=None):
        if cut not in self.cuts:
            self.cuts.append(cut)
            if nickname:
                self.nicknames[cut] = nickname
            else:
                self.nicknames[cut] = cut
    def check(self,fpath, treename = 'events'):
        branches = self.cuts[:]
        if self.weight:
            branches.append(self.weight)
        xarr = rnp.root2array([fpath], 
                               branches = branches,
                               treename = treename)
        if self.weight:
            weights = xarr[self.weight]
        else:
            weights = 1
        xarr = xarr.view(np.float64).reshape(xarr.shape+(-1,))
        print '%-20s : %15s %15s'%('SELECTION','YIELD','RAW')
        print '---------------------------------------------------------'
        for ic in xrange(len(self.cuts)): 
            xslice = xarr[:,:(ic+1)]
            xpass = (xslice.sum(axis=1) == (ic+1))
            npass = xpass.sum()
            nyield = (xpass * weights).sum()
            print '%-20s : %15f %15i'%(self.nicknames[self.cuts[ic]],nyield,npass)

infile = args.infile

with open(args.cutlist) as fcuts:
    cuts = [x.strip() for x in fcuts.readlines()]

c = Cutflow()
if args.weight:
    c.weight = tTIMES('1',args.weight)
for cut in cuts:
    c.register(*(cut.split(':')))

c.check(infile,args.treename)
